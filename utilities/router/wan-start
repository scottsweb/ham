#!/bin/sh

# IP of the machine that should be woken
TARGET=

# MAC address of the machine that should be woken
MAC=

# WAN and LAN ports of the plex app (in my case it's both 32400)
PORTS="(32400)"

INTERVAL=2
NUMP=1

OLD_LC=`wc -l /tmp/syslog.log | awk '{print $1}'`

while sleep $INTERVAL
do
    # Only care about new lines since the script last ran
    LC=`wc -l /tmp/syslog.log | awk '{print $1}'`
    NEWLINES=`expr $LC - $OLD_LC`
    if [ "$LC" -ne "$OLD_LC" ]; then
        # Could handle WAN vs LAN different if I wanted. Just do the same thing on either for now...
        # Matching DEST ( DST=$TARGET .* ) doesn't always work - removed from egrep
        LINE=`tail -$NEWLINES /tmp/syslog.log | egrep "PLEX .* DPT=$PORTS" | tail -1`
        SRC=`echo $LINE | awk '{print $10}' | sed -e "s/SRC=//g"`
        if [ "$SRC" != "" ]; then
            # Found a matching line. Try to ping the server
            RET=`ping -c $NUMP -W 1 $TARGET 2> /dev/null | awk '/packets received/ {print $4}'`

            if [ "$RET" -ne "$NUMP" ]; then
                # Guess it's sleeping. Send WoL.
                echo "[`date -Iseconds`] $SRC causes WOL. Line was $LINE"  >> /var/log/wol
                # default interface of ether-wake is eth0, but on AC87U eth0 is WAN, so we use br0 which is LAN.
                /usr/sbin/ether-wake -i br0 $MAC
                # Could sleep for 20 minutes I guess...I mean, there's no real reason to check again
                # Whatever...10 seconds is fine.
                sleep 10m
            fi
        fi
    fi
    OLD_LC=`wc -l /tmp/syslog.log | awk '{print $1}'`
done
