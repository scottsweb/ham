custom_header:
  exceptions:
    - conditions:
        user_agent: Mobile
      config:
        kiosk_mode: false
    - conditions:
        query_string: kiosk
      config:
        kiosk_mode: true

anchors:
  ⚓₁: &light-style
    style: |
      ha-card {
        box-shadow: none;
      }
      .light-button {
        width: 40% !important;
      }
      .more-info {
        display: none;
      }
  ⚓₂: &mini-button
    styles:
      card:
        - background: "var(--nord2)"
        - height: 56px
        - padding: 0.9em
      icon:
        - width: 50px
        - color: "var(--nord0)"
      lock:
        - width: 14px
        - color: "var(--nord6)"
        - padding-left: 70%
        - padding-right: 13.8%
    state:
      - value: 'on'
        styles:
          card:
            - background: "var(--nord9)"
          icon:
            - color: "var(--nord6)"
          lock:
            - color: "var(--nord0)"

button_card_templates:
  # Light Template
  light:
    aspect_ratio: 1/1
    show_state: true
    show_icon: false
    state: &button_state
      - value: 'on'
        styles:
          card: [background-color: 'var(--card-background-color)']
          name: [color: 'var(--primary-text-color)']
          state: [color: 'var(--primary-text-color)']
      - value: 'off'
        styles:
          card: [background-color: 'var(--nord2)']
          name: [color: 'var(--text-primary-color)']
          state: [color: 'var(--text-primary-color)']
    custom_fields:
      info: >
        [[[ if (entity.state === 'on' && entity.attributes.brightness) {
        const brightness = Math.round(entity.attributes.brightness / 2.54);
        const radius = 20.5; const circumference = radius * 2 * Math.PI;
        return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" style="
        transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - brightness / 100 * circumference};" />
        <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle">${brightness}<tspan font-size="10">%</tspan></text></svg>`; } ]]]
    extra_styles: |
      [[[ var radius = 20.5;
      var circumference = radius * 2 * Math.PI;
      var brightness = Math.round( entity.attributes.brightness / 2.54 );
      return '#c_brightness { transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ' + circumference + '; stroke-dashoffset: ' + (circumference - brightness / 100 * circumference) + ';}'; ]]]
    styles:
      name: &button_styles_name
        [top: 60%, left: 11%, position: absolute, line-height: 1em]
      state: &button_styles_state
        [top: 78%, left: 11%, position: absolute, line-height: 1em, font-size: 0.8em]
      custom_fields:
        info: &circle_pos
          [top: 8.5%, left: 52%, width: 40%, position: absolute, letter-spacing: 0.03vw]
      card: &button_styles_card
        [text-rendering: optimizeLegibility, font-weight: 400, font-size: 1.1em,
        background-color: 'var(--nord2)', border-radius: 'var(--ha-card-border-radius, 4px)', transition: all 0.5s ease-in-out]
    tap_action:
      action: toggle
    hold_action:
      action: toggle

  # Switch Template
  switch:
    aspect_ratio: 1/1
    show_state: true
    show_icon: false
    state: *button_state
    extra_styles: |
      @keyframes icon-shake{from,to{transform:translate3d(0,0,0)}10%,30%{transform:translate3d(-5px,0,0)}20%,40%{transform:translate3d(5px,0,0)}50%,100%{transform:translate3d(0,0,0)}}
      @keyframes icon-ping{from,20%,40%,60%,to{animation-timing-function:cubic-bezier(0.215,0.61,0.355,1)}0%{opacity:0;transform:scale3d(0.6,0.6,0.6)}20%{transform:scale3d(1.2,1.2,1.2)}40%{opacity:1;transform:scale3d(0.9,0.9,0.9)}60%{opacity:1;transform:scale3d(1,1,1)}to{opacity:1;transform:scale3d(1,1,1)}}
      @keyframes icon-pulse{0%{opacity:0}100%{opacity:1}}
      @keyframes icon-buzz{from,to{transform:translate3d(0,0,0) rotate(0deg)}10%,30%{transform:translate3d(-1px,-1px,0) rotate(5deg); transform-origin: left bottom}20%,40%{transform:translate3d(1px,1px,0) rotate(-5deg); transform-origin: right bottom}50%,100%{transform:translate3d(0,0,0) rotate(0deg)}}
    styles:
      name: *button_styles_name
      state: *button_styles_state
      card: *button_styles_card

title: Lagom
views:
# Home
  - title: Home
    icon: mdi:home
    path: default_view
    background: "var(--nord0)"
    cards:
      - type: horizontal-stack
        cards:
          # Scott
          - type: custom:button-card
            entity: person.scott
            name: Scott
            triggers_update:
              ['person.scott', 'sensor.scott_last_changed']
            state_display: &button_home_state_display >
              [[[ return entity.state === 'home' ? 'Hemma' : 'Bort'; ]]]
            show_entity_picture: true
            state: &button_home_state
              - value: 'home'
                styles:
                  card:
                    - background-color: 'var(--card-background-color)'
                  name:
                    - color: 'var(--primary-text-color)'
                  state:
                    - color: 'var(--primary-text-color)'
                  custom_fields:
                    info:
                      - color: '#959698'
              - value: 'not_home'
                styles:
                  card:
                    - background-color: 'var(--nord2)'
                  name:
                    - color: 'var(--text-primary-color)'
                  state:
                    - color: 'var(--text-primary-color)'
                  custom_fields:
                    info:
                      - color: '#959698'
            styles: &button_home_styles
              entity_picture:
                  [clip-path: circle(50% at center), top: 7.5%, left: 11.2%, width: 33%, position: absolute]
              custom_fields:
                sensor: *circle_pos
            style:
              top: 64.5%
              left: 80.05%
              width: 10%
            tap_action: !include popups/person-scott.yaml
            hold_action: !include popups/person-scott.yaml
            custom_fields:
              sensor: >
                [[[ function time(c) {
                var s = (c / 1000); var m = (c / (1000 * 60)); var h = (c / (1000 * 60 * 60)); var d = (c / (1000 * 60 * 60 * 24));
                if (s < 60) { return parseInt(s) + 's'; } else if (m < 60) { return parseInt(m) + 'm'; }
                else if (h < 24) { return parseInt(h) + 'h'; } else { return parseInt(d) + 'd'; }
                }
                const last_changed = time(Date.now() - Date.parse(states[entity.entity_id].last_changed));
                const stroke_color = entity.state === 'home' ? 'var(--primary-text-color)' : 'var(--disabled-text-color)';
                const fill_color = entity.state === 'home' ? 'none' : '#FFFFFF08';
                return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
                <text x="50%" y="54%" fill="${stroke_color}" font-size="14" text-anchor="middle" alignment-baseline="middle">${last_changed}</text></svg>`; ]]]
            template: switch

          # Gemma
          - type: custom:button-card
            entity: person.gemma
            name: Gemma
            triggers_update:
              ['person.gemma', 'sensor.gemma_last_changed']
            state_display: *button_home_state_display
            show_entity_picture: true
            state: *button_home_state
            styles: *button_home_styles
            style:
              top: 64.5%
              left: 91.05%
              width: 10%
            tap_action: !include popups/person-gemma.yaml
            hold_action: !include popups/person-gemma.yaml
            custom_fields:
              sensor: >
                [[[ function time(c) {
                var s = (c / 1000); var m = (c / (1000 * 60)); var h = (c / (1000 * 60 * 60)); var d = (c / (1000 * 60 * 60 * 24));
                if (s < 60) { return parseInt(s) + 's'; } else if (m < 60) { return parseInt(m) + 'm'; }
                else if (h < 24) { return parseInt(h) + 'h'; } else { return parseInt(d) + 'd'; }
                }
                const last_changed = time(Date.now() - Date.parse(states[entity.entity_id].last_changed));
                const stroke_color = entity.state === 'home' ? 'var(--primary-text-color)' : 'var(--disabled-text-color)';
                const fill_color = entity.state === 'home' ? 'none' : '#FFFFFF08';
                return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
                <text x="50%" y="54%" fill="${stroke_color}" font-size="14" text-anchor="middle" alignment-baseline="middle">${last_changed}</text></svg>`; ]]]
            template: switch

          # Post notification
          - type: custom:button-card
            entity: input_boolean.post_visibility
            state_display: >
              [[[ return entity.state === 'on' ? 'Ja' : 'Nej'; ]]]
            custom_fields:
              icon_mail: >
                <svg viewBox="0 0 24 24"><path d="M20,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V6C22,4.89 21.1,4 20,4M17,17H7V15H17M17,13H7V11H17M20,9H17V6H20" fill="var(--button-card-light-color-no-temperature)" /></svg>
            styles:
              custom_fields:
                icon_mail:
                  - top: 10.1%
                  - left: 10%
                  - width: 30%
                  - position: absolute
                  - animation: >
                      [[[
                        if (entity.state === 'on')
                          return "icon-shake 1s ease-in-out infinite";
                      ]]]
            tap_action:
              action: call-service
              service: input_boolean.turn_off
              service_data:
                entity_id: input_boolean.post_visibility
            hold_action: !include popups/sensor-post.yaml
            template: switch

      # Washing timer
      - type: conditional
        conditions:
          - entity: input_boolean.washing_timer_visibility
            state: 'on'
        card:
          type: "custom:button-card"
          entity: timer.washing
          show_icon: true
          show_name: false
          show_state: true
          layout: icon_state
          tap_action:
            action: call-service
            service: script.turn_on
            service_data:
              entity_id: script.restart_washing_timer
          hold_action:
            action: call-service
            service: input_boolean.turn_off
            service_data:
              entity_id: input_boolean.washing_timer_visibility
          double_tap_action:
            action: none
          styles:
            card:
            icon:
              - left: -40px
              - height: 45px
              - color: var(--nord13)
              - animation: icon-buzz 1s infinite
            state:
              - font-size: 1.7em
              - font-weight: 500
              - right: -40px
              - position: relative
          state:
            - value: 'idle'
              styles:
                icon:
                  - animation: none
                  - color: var(--nord14)

      # Lights
      - type: custom:vertical-stack-in-card
        title: Lights
        style: |
          .card-header {
            padding-bottom: 0;
          }
        cards:
        - type: custom:mod-card
          style: |
            ha-card {
              padding: 0 0.2em 0 0.2em;
            }
          card:
            type: horizontal-stack
            title: false
            cards:
            - type: light
              entity: light.lounge_light_tall
              icon: mdi:floor-lamp
              <<: *light-style
            - type: light
              entity: light.lounge_light_small
              icon: mdi:desk-lamp
              <<: *light-style
        - type: custom:mod-card
          style: |
            ha-card {
              padding: 0 0.2em 0.8em 0.2em;
            }
          card:
            type: horizontal-stack
            title: false
            cards:
            - type: light
              entity: light.nanoleaf
              <<: *light-style
            - type: button
              entity: switch.cloud
              icon: mdi:cloud
              style: |
                ha-card {
                  box-shadow: none;
                }
                ha-icon {
                  width: 32% !important;
                }
                span {
                  position: relative;
                  top: 22%;
                }
        - type: custom:mod-card
          style: |
            ha-card {
              padding: 0 0.2em 0.8em 0.2em;
            }
          card:
            type: horizontal-stack
            title: false
            cards:
            - type: light
              entity: light.cameras
              icon: mdi:camera-party-mode
              <<: *light-style
            - type: light
              entity: light.cabinet_1
              icon: mdi:wall-sconce-flat-variant
              <<: *light-style
            - type: light
              entity: light.cabinet_2
              icon: mdi:wall-sconce-flat-variant
              <<: *light-style
      - type: vertical-stack
        cards:
          - type: sensor
            entity: sensor.indoor_temperature
            graph: line
          - type: entities
            title: Fan
            entities:
              - fan.fan
              - switch.auto_fan

      - type: sensor
        graph: line
        entity: sensor.solar_host

      - type: vertical-stack
        cards:
          - type: entities
            title: Exchange Rates
            show_header_toggle: false
            entities:
              - sensor.gbp_sek
              - sensor.sek_gbp
          - type: entities
            title: Coins
            show_header_toggle: false
            entities:
              - sensor.bitcoin
              - sensor.ethereum

  - title: Entertainment
    path: entertainment
    icon: mdi:filmstrip
    background: "var(--nord0)"
    badges:
    cards:
      - type: vertical-stack
        cards:
          - type: conditional
            conditions:
              - entity: media_player.tv
                state_not: 'off'
            card:
              type: media-control
              entity: media_player.tv
          - type: conditional
            conditions:
              - entity: media_player.tv
                state: 'off'
            card:
              type: custom:button-card
              entity: sensor.plex_recently_added
              triggers_update:
                ['sensor.plex_recently_added']
              name: Nyligen tillagd
              aspect_ratio: 2.55/1
              show_state: true
              show_icon: true
              icon: mdi:cast
              state_display: >
                [[[ const data = states[entity.entity_id].attributes.data;
                const number = data[1].number == undefined ? '(' + data[1].aired.split('-')[0] + ')' : data[1].number;
                return `${data[1].title} ${number}`; ]]]
              custom_fields:
                media_image: >
                  <svg viewBox="0 0 50 50" />
                overlay: >
                  [[[ if (entity.state != 'off' && entity.state != 'idle' && entity.state != 'standby' && entity.state != 'unavailable') {
                  return '<svg viewBox="0 0 50 50" />'; } ]]]
                label: 'TV'
              styles:
                name:
                  [bottom: 3em, left: 1.1em, position: absolute, z-index: 10, font-size: 0.9em]
                state:
                  [bottom: 1em, left: 0.9em, position: absolute, z-index: 10,
                  white-space: nowrap, overflow: hidden, text-overflow: ellipsis, max-width: 90%, font-size: 1.1em]
                custom_fields:
                  media_image: [background-position: top center, background-size: 100%, position: absolute, top: -30px, width: 100%, background-image:
                    "[[[ return 'url(' + states[entity.entity_id].attributes.data[1].fanart + ')'; ]]]"]
                  overlay: [background: 'rgba(46, 52, 64, 0.6)']
                  label: [position: absolute, z-index: 12, color: 'var(--nord6)', top: 1.6em, left: 3.7em, font-size: 0.8em]
                card:
                  [color: 'var(--nord6)', text-shadow: '1px 1px 5px rgba(46, 52, 64, 0.7)']
                icon: [position: absolute, z-index: 12, width: 24px, top: -3.92em, left: 1em, color: 'var(--nord6)']
              tap_action:
                action: none

          - type: horizontal-stack
            cards:
              - type: "custom:button-card"
                name: Netflix
                styles:
                  card:
                    - color: var(--nord6)
                    - background: var(--nord9)
                    - height: 56px
                show_icon: false
                tap_action:
                  action: call-service
                  service: media_player.select_source
                  service_data:
                    entity_id: media_player.tv_al
                    source: Kodi
              - type: "custom:button-card"
                name: YouTube
                styles:
                  card:
                    - color: var(--nord6)
                    - background: var(--nord9)
                    - height: 56px
                show_icon: false
                tap_action:
                  action: call-service
                  service: media_player.select_source
                  service_data:
                    entity_id: media_player.tv_al
                    source: YouTube
              - type: "custom:button-card"
                name: Plex
                styles:
                  card:
                    - color: var(--nord6)
                    - background: var(--nord9)
                    - height: 56px
                show_icon: false
                tap_action:
                  action: call-service
                  service: media_player.select_source
                  service_data:
                    entity_id: media_player.tv_al
                    source: Plex
              - type: "custom:button-card"
                name: Steam
                styles:
                  card:
                    - color: var(--nord6)
                    - background: var(--nord9)
                    - height: 56px
                show_icon: false
                tap_action:
                  action: call-service
                  service: script.steam_on

          - type: horizontal-stack
            cards:
             - type: "custom:button-card"
               name: Volume Down
               icon: mdi:volume-minus
               styles:
                 card:
                   - color: var(--nord6)
                   - background: var(--nord10)
                   - height: 56px
                   - padding: 0.9em
                 icon:
                   - color: var(--nord6)
               show_name: false
               tap_action:
                 action: call-service
                 service: media_player.volume_down
                 service_data:
                   entity_id: media_player.teeger
             - type: "custom:button-card"
               name: Mute
               icon: mdi:volume-mute
               state:
                 - operator: template
                   value: >
                     [[[
                       if (states['media_player.teeger'].attributes.is_volume_muted != false)
                         return 'on'
                     ]]]
                   styles:
                     card:
                       - background: var(--nord11)
                 - operator: default
               styles:
                 card:
                   - color: var(--nord6)
                   - background: var(--nord10)
                   - height: 56px
                   - padding: 0.9em
                 icon:
                   - color: var(--nord6)
               show_name: false
               tap_action:
                 action: call-service
                 service: media_player.volume_mute
                 service_data:
                   entity_id: media_player.teeger
                   is_volume_muted: >
                     [[[
                       if (states['media_player.teeger'].attributes.is_volume_muted == false)
                         return true
                       else
                         return false
                     ]]]
             - type: "custom:button-card"
               name: Volume Up
               icon: mdi:volume-plus
               styles:
                 card:
                   - color: var(--nord6)
                   - background: var(--nord10)
                   - height: 56px
                   - padding: 0.9em
                 icon:
                   - color: var(--nord6)
               show_name: false
               tap_action:
                 action: call-service
                 service: media_player.volume_up
                 service_data:
                   entity_id: media_player.teeger

          - type: media-control
            entity: media_player.teeger

  - title: Dammsugare
    path: dammsugare
    icon: mdi:robot-vacuum
    background: "var(--nord0)"
    badges:
    cards:
      - type: vertical-stack
        cards:
        - type: 'custom:vacuum-card'
          entity: vacuum.xiaomi_vacuum_cleaner
          show_toolbar: false
          compact_view: true
          stats:
            default:
              - entity_id: sensor.monk_filter
                unit: '%'
                subtitle: Filter
              - entity_id: sensor.monk_side_brush
                unit: '%'
                subtitle: Side brush
              - entity_id: sensor.monk_brush
                unit: '%'
                subtitle: Main brush
              - entity_id: sensor.monk_sensors
                unit: '%'
                subtitle: Sensors
            cleaning:
              - entity_id: sensor.xiaomi_vacuum_cleaner_current_clean_area
                unit: m2
                subtitle: Cleaning area
              - entity_id: sensor.xiaomi_vacuum_cleaner_current_clean_duration
                unit: seconds
                subtitle: Cleaning time
        - type: entities
          title: " ‍  Select rooms to clean"
          entities:
            - entity: input_boolean.monk_clean_lounge
            - entity: input_boolean.monk_clean_kitchen
            - entity: input_boolean.monk_clean_bedroom
            - entity: input_boolean.monk_clean_dining
            - entity: input_boolean.monk_clean_bathroom
            - entity: input_boolean.monk_clean_office
 #          - entity: input_select.monk_fan_speed
          style: |
            ha-card {
              margin-top: -12px;
            }
            .card-header {
              font-size: 1em;
            }
        - type: horizontal-stack
          cards:
            - type: conditional
              conditions:
                - entity: vacuum.xiaomi_vacuum_cleaner
                  state: 'docked'
              card:
                type: custom:button-card
                entity: group.monk_zones
                name: Start
                show_icon: true
                icon: mdi:play
                show_name: false
                lock:
                  exemptions: []
                  enabled: >
                   [[[
                      if ((entity.state == 'on') && (states['vacuum.xiaomi_vacuum_cleaner'].state == 'docked'))
                        return false
                      else
                        return true
                   ]]]
                <<: *mini-button
                tap_action:
                  action: call-service
                  service: script.monk_clean
            - type: conditional
              conditions:
                - entity: vacuum.xiaomi_vacuum_cleaner
                  state_not: 'docked'
              card:
                type: custom:button-card
                entity: group.monk_zones
                name: Resume
                show_icon: true
                icon: mdi:play
                show_name: false
                lock:
                  exemptions: []
                  enabled: >
                   [[[
                      if (states['vacuum.xiaomi_vacuum_cleaner'].state != 'idle' && states['vacuum.xiaomi_vacuum_cleaner'].state != 'cleaning')
                        return false
                      else
                        return true
                   ]]]
                <<: *mini-button
                tap_action:
                  action: call-service
                  service: vacuum.start_pause
                  service_data:
                    entity_id: vacuum.xiaomi_vacuum_cleaner
            - type: custom:button-card
              entity: group.monk_zones
              name: Pause
              show_icon: true
              icon: mdi:pause
              show_name: false
              lock:
                exemptions: []
                enabled: >
                 [[[
                   if ((entity.state == 'on') && (states['vacuum.xiaomi_vacuum_cleaner'].state == 'cleaning'))
                     return false
                   else
                     return true
                 ]]]
              <<: *mini-button
#              state:
#                - operator: template
#                  value: >
#                    [[[
#                      if ((entity.state == 'on') && (states['vacuum.xiaomi_vacuum_cleaner'].state == 'cleaning'))
#                        return false
#                      else
#                        return true
#                    ]]]
              tap_action:
                action: call-service
                service: vacuum.pause
                service_data:
                  entity_id: vacuum.xiaomi_vacuum_cleaner
            - type: custom:button-card
              entity: group.monk_zones
              name: Stop
              show_icon: true
              icon: mdi:stop
              show_name: false
              lock:
                exemptions: []
                enabled: >
                 [[[
                   if ((entity.state == 'on') && (states['vacuum.xiaomi_vacuum_cleaner'].state == 'cleaning' || states['vacuum.xiaomi_vacuum_cleaner'].state == 'paused'))
                     return false
                   else
                     return true
                 ]]]
              <<: *mini-button
#              state:
#                - operator: template
#                  value: >
#                    [[[
#                      if ((entity.state == 'on') && (states['vacuum.xiaomi_vacuum_cleaner'].state == 'cleaning'))
#                        return false
#                      else
#                        return true
#                    ]]]
              tap_action:
                action: call-service
                service: vacuum.stop
                service_data:
                  entity_id: vacuum.xiaomi_vacuum_cleaner
            - type: custom:button-card
              entity: group.monk_zones #sensor.monk_state
              name: Return to Base
              show_icon: true
              icon: mdi:home
              show_name: false
              lock:
                exemptions: []
                enabled: >
                 [[[
                   if (states['vacuum.xiaomi_vacuum_cleaner'].state != 'docked')
                     return false
                   else
                     return true
                 ]]]
              <<: *mini-button
              tap_action:
                action: call-service
                service: vacuum.return_to_base
                service_data:
                  entity_id: vacuum.xiaomi_vacuum_cleaner
            - type: custom:button-card
              entity: group.monk_zones #sensor.monk_state
              name: Locate
              show_icon: true
              icon: mdi:map-marker-question
              show_name: false
              lock:
                exemptions: []
                enabled: >
                 [[[
                   if (states['vacuum.xiaomi_vacuum_cleaner'].state != 'docked')
                     return false
                   else
                     return true
                 ]]]
              <<: *mini-button
              tap_action:
                action: call-service
                service: vacuum.locate
                service_data:
                  entity_id: vacuum.xiaomi_vacuum_cleaner

  - title: Cameras
    path: cctv
    icon: mdi:camera-iris
    background: "var(--nord0)"
    badges:
    cards:
      - type: vertical-stack
        cards:
          - type: picture-entity
            entity: camera.blink_front_door
          - type: entities
            title: Front
            show_header_toggle: false
            entities:
              - script.blink_front_door_capture_script
              - sensor.blink_front_door_temperature
              - binary_sensor.blink_front_door_battery
              - binary_sensor.blink_front_door_camera_armed
      - type: vertical-stack
        cards:
          - type: picture-entity
            entity: camera.blink_kitchen
          - type: entities
            title: Back
            show_header_toggle: false
            entities:
              - script.blink_kitchen_capture_script
              - sensor.blink_kitchen_temperature
              - binary_sensor.blink_kitchen_battery
              - binary_sensor.blink_kitchen_camera_armed
      - type: vertical-stack
        cards:
          - type: picture-entity
            entity: camera.blink_street
          - type: entities
            title: Street
            show_header_toggle: false
            entities:
              - script.blink_street_capture_script
              - sensor.blink_street_temperature
              - binary_sensor.blink_street_battery
              - binary_sensor.blink_street_camera_armed

  - title: Outdoors
    path: outdoors
    icon: mdi:pine-tree
    background: "var(--nord0)"
    cards:
      - type: vertical-stack
        cards:
        - type: weather-forecast
          entity: weather.home
        - type: entities
          title: Environment
          show_header_toggle: false
          entities:
#            - sensor.dark_sky_precip_intensity
            - sun.sun
            - sensor.moon
#            - sensor.dark_sky_uv_index
            - sensor.u_s_air_pollution_level
            - sensor.u_s_air_quality_index
            - sensor.u_s_main_pollutant
 #      - type: map
 #        title: Space Station
 #        aspect_ratio: 16:9
 #        default_zoom: 8
 #        entities:
 #          - binary_sensor.iss
 #      - type: entities
 #        title: Next Train
 #        show_header_toggle: false
 #        entities:
 #          - sensor.next_train_status
 #          - sensor.next_trains_estimated
 #          - sensor.next_trains_scheduled
 #          - sensor.next_trains_platform
 #      - type: plant-status
 #        entity: plant.flora_front_plant
 #      - type: plant-status
 #        entity: plant.flora_back_plant

  - title: Settings
    path: settings
    icon: mdi:cog
    background: "var(--nord0)"
    badges:
    cards:
 #      - type: entities
 #        title: Protect
 #        show_header_toggle: false
 #        entities:
 #          - sensor.downstairs_nest_protect_battery_health
 #          - sensor.downstairs_nest_protect_co_status
 #          - sensor.downstairs_nest_protect_smoke_status
 #          - sensor.upstairs_nest_protect_battery_health
 #          - sensor.upstairs_nest_protect_co_status
 #          - sensor.upstairs_nest_protect_smoke_status
      - type: entities
        title: Internet
        show_header_toggle: false
        entities:
          - sensor.speedtest_ping
          - sensor.speedtest_download
          - sensor.speedtest_upload
          - sensor.ip_address
      - type: entities
        title: Saga
        show_header_toggle: false
        entities:
          - entity: sensor.memory_use_percent
          - entity: sensor.load_5m
          - entity: sensor.cpu_temperature
          - entity: sensor.since_last_boot
          - type: section
            label: Network
          - entity: script.saga_on
          - entity: switch.saga_pi_hole
          - entity: switch.vpn_ee_switch
      - type: entities
        title: Containers (Saga)
        show_header_toggle: false
        entities:
          - entity: sensor.docker_containers_running
          - entity: sensor.docker_containers_total
          - type: section
          - entity: switch.docker_appdaemon
          - entity: switch.docker_deconz
          - entity: switch.docker_esphome
          #- entity: switch.docker_folding
          - entity: switch.docker_miniflux
          - entity: switch.docker_wireguard
          - entity: switch.docker_plex
          - entity: switch.docker_syncthing
          - entity: switch.docker_warrior
          - entity: switch.docker_watchtower
      - type: entities
        title: "Containers (Beans)"
        show_header_toggle: false
        entities:
          - entity: sensor.beans_containers_running
          - entity: sensor.beans_containers_total
          - type: section
          - entity: switch.beans_cloudflared
          - entity: switch.beans_cloudflared_web
          - entity: switch.beans_gotosocial_ge
          - entity: switch.beans_gotosocial_se
      - type: entities
        title: Settings
        show_header_toggle: false
        entities:
          - switch.presence_emulator
          - switch.do_not_disturb
