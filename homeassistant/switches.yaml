- platform: command_line
  switches:
    pihole_sycamore_switch:
      command_on: !secret pihole_sycamore_command_on
      command_off: !secret pihole_sycamore_command_off
      command_state: !secret pihole_sycamore_command_state
      value_template: "{{ value_json.status == 'enabled' }}"

- platform: command_line
  switches:
    pihole_mycroft_switch:
      command_on: !secret pihole_mycroft_command_on
      command_off: !secret pihole_mycroft_command_off
      command_state: !secret pihole_mycroft_command_state
      value_template: "{{ value_json.status == 'enabled' }}"

- platform: command_line
  switches:
    vpn_liskeard_switch:
      command_on: !secret ssh_liskeard_vpn_on
      command_off: !secret ssh_liskeard_vpn_off
      command_state: !secret ssh_liskeard_vpn_status
      value_template: >
        {{ "vpn" in value }}

- platform: command_line
  switches:
    vpn_ee_switch:
      command_on: !secret ssh_ee_vpn_on
      command_off: !secret ssh_ee_vpn_off
      command_state: !secret ssh_ee_vpn_status
      value_template: >
        {{ "vpn" in value }}

- platform: mqtt
  name: "Presence Emulator"
  state_topic: "sycamore/presence/switch"
  command_topic: "sycamore/presence/switch"
  payload_on: "on"
  payload_off: "off"
  retain: true

- platform: mqtt
  name: "Auto Fan"
  state_topic: "sycamore/fan/switch"
  command_topic: "sycamore/fan/switch"
  payload_on: "on"
  payload_off: "off"
  retain: true

- platform: mqtt
  name: "TV"
  state_topic: "sycamore/tv/switch"
  command_topic: "sycamore/tv/switch"
  payload_on: "on"
  payload_off: "off"
  retain: true

# - platform: mqtt
#   name: "Speaker"
#   state_topic: "sycamore/tvspeaker/switch"
#   command_topic: "sycamore/tvspeaker/switch"
#   payload_on: "on"
#   payload_off: "off"
#   retain: true

- platform: mqtt
  name: "Game Core"
  state_topic: "sycamore/games/switch"
  command_topic: "sycamore/games/switch"
  payload_on: "on"
  payload_off: "off"
  retain: true

- platform: template
  switches:
    games:
      friendly_name: "Games"
      value_template: "{{ is_state('switch.game_core','on') }}"
      turn_on:
        service: switch.turn_on
        data_template:
          entity_id: >-
            {% if is_state('switch.tv', 'on') %}
              switch.game_core
            {% else %}
              switch.null
            {% endif %}
      turn_off:
        service: switch.turn_off
        data:
          entity_id: switch.game_core

    media_play_pause_luther:
        value_template: "{% if is_state('media_player.luther_universal_tv', 'playing') %}on{% else %}off{% endif %}"
        turn_on:
          service: media_player.media_play
          entity_id: media_player.luther_universal_tv
        turn_off:
          service: media_player.media_pause
          entity_id: media_player.luther_universal_tv

- platform: rest
  resource: !secret dockermon_blinkt
  name: Dockermon Blinkt
  body_on: '{"state": "start"}'
  body_off: '{"state": "stop"}'
  is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  username: !secret dockermon_username
  password: !secret dockermon_password
  timeout: 20
  verify_ssl: false

- platform: rest
  resource: !secret dockermon_nodered
  name: Dockermon NodeRED
  body_on: '{"state": "start"}'
  body_off: '{"state": "stop"}'
  is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  username: !secret dockermon_username
  password: !secret dockermon_password
  timeout: 20
  verify_ssl: false

- platform: rest
  resource: !secret dockermon_watchtower
  name: Dockermon Watchtower
  body_on: '{"state": "start"}'
  body_off: '{"state": "stop"}'
  is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  username: !secret dockermon_username
  password: !secret dockermon_password
  timeout: 20
  verify_ssl: false

- platform: rest
  resource: !secret dockermon_plex
  name: Dockermon Plex
  body_on: '{"state": "start"}'
  body_off: '{"state": "stop"}'
  is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  username: !secret dockermon_username
  password: !secret dockermon_password
  timeout: 20
  verify_ssl: false

- platform: rest
  resource: !secret dockermon_plex_saga
  name: Dockermon Plex Saga
  body_on: '{"state": "start"}'
  body_off: '{"state": "stop"}'
  is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  username: !secret dockermon_username
  password: !secret dockermon_password
  timeout: 20
  verify_ssl: false

- platform: rest
  resource: !secret dockermon_warrior
  name: Dockermon Warrior
  body_on: '{"state": "start"}'
  body_off: '{"state": "stop"}'
  is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  username: !secret dockermon_username
  password: !secret dockermon_password
  timeout: 20
  verify_ssl: false

- platform: rest
  resource: !secret dockermon_watchtower_saga
  name: Dockermon Watchtower Saga
  body_on: '{"state": "start"}'
  body_off: '{"state": "stop"}'
  is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  username: !secret dockermon_username
  password: !secret dockermon_password
  timeout: 20
  verify_ssl: false

- platform: rest
  resource: !secret dockermon_folding
  name: Dockermon F@H
  body_on: '{"state": "start"}'
  body_off: '{"state": "stop"}'
  is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  username: !secret dockermon_username
  password: !secret dockermon_password
  timeout: 20
  verify_ssl: false

- platform: telnet
  switches:
    fah:
      resource: !secret folding_ip
      name: F@H
      port: 36330
      command_on: "unpause"
      command_off: "pause"
      command_state: "slot-info"
      value_template: >
        {{ "RUNNING" in value }}
      timeout: 10
