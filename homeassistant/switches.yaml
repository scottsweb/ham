- platform: command_line
  switches:
    pihole_sycamore_switch:
      command_on: !secret pihole_sycamore_command_on
      command_off: !secret pihole_sycamore_command_off
      command_state: !secret pihole_sycamore_command_state
      value_template: "{{ value_json.status == 'enabled' }}"

- platform: command_line
  switches:
    pihole_mycroft_switch:
      command_on: !secret pihole_mycroft_command_on
      command_off: !secret pihole_mycroft_command_off
      command_state: !secret pihole_mycroft_command_state
      value_template: "{{ value_json.status == 'enabled' }}"

- platform: mqtt
  name: "Presence Emulator"
  state_topic: "sycamore/presence/switch"
  command_topic: "sycamore/presence/switch"
  payload_on: "on"
  payload_off: "off"
  retain: true

- platform: mqtt
  name: "TV"
  state_topic: "sycamore/tv/switch"
  command_topic: "sycamore/tv/switch"
  payload_on: "on"
  payload_off: "off"
  retain: true

- platform: mqtt
  name: "Speaker"
  state_topic: "sycamore/tvspeaker/switch"
  command_topic: "sycamore/tvspeaker/switch"
  payload_on: "on"
  payload_off: "off"
  retain: true

- platform: mqtt
  name: "Game Core"
  state_topic: "sycamore/games/switch"
  command_topic: "sycamore/games/switch"
  payload_on: "on"
  payload_off: "off"
  retain: true

- platform: template
  switches:
    games:
      friendly_name: "Games"
      value_template: "{{ is_state('switch.game_core','on') }}"
      turn_on:
        service: switch.turn_on
        data_template:
          entity_id: >-
            {% if is_state('switch.tv', 'on') %}
              switch.game_core
            {% else %}
              switch.null
            {% endif %}
      turn_off:
        service: switch.turn_off
        data:
          entity_id: switch.game_core

- platform: broadlink
  host: !secret broadlink_ip
  mac: !secret broadlink_mac
  type: rm_mini
  switches:
    tv_ir:
      friendly_name: "TV IR"
      command_on: 'JgBQAAABKJMTEhMSEzcSExISExITEhMSEjgSNxM3EjcTEhMSEhMSExI3ExISOBI3ExITNxISEzcTEhI3ExITEhM3EhMSNxMSEgAFlgABJ0sSAA0FAAAAAAAAAAA='
      command_off: 'JgBQAAABKJMTEhMSEzcSExISExITEhMSEjgSNxM3EjcTEhMSEhMSExI3ExISOBI3ExITNxISEzcTEhI3ExITEhM3EhMSNxMSEgAFlgABJ0sSAA0FAAAAAAAAAAA='

- platform: broadlink
  host: !secret broadlink_ip
  mac: !secret broadlink_mac
  type: rm_mini
  switches:
    tv_mute:
      friendly_name: "TV Mute"
      command_on: 'JgBQAAABKZMTEhITEjcTEhMSEhMSExISEzcSOBI3EzcSExITEhITEhM3EhMSEhM3ExISExITEhITEhM3EjcTEhM3EjgSNxM3EgAFlgABKEoSAA0FAAAAAAAAAAA='
      command_off: 'JgBQAAABKZMTEhITEjcTEhMSEhMSExISEzcSOBI3EzcSExITEhITEhM3EhMSEhM3ExISExITEhITEhM3EjcTEhM3EjgSNxM3EgAFlgABKEoSAA0FAAAAAAAAAAA='

- platform: command_line
  switches:
    hot_water:
      command_on: !secret nest_boost
      command_off: !secret nest_cancel

- platform: rest
  resource: !secret dockermon_blinkt
  name: Dockermon Blinkt
  body_on: '{"state": "start"}'
  body_off: '{"state": "stop"}'
  is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  username: !secret dockermon_username
  password: !secret dockermon_password
  timeout: 20

- platform: rest
  resource: !secret dockermon_ncid
  name: Dockermon NCID
  body_on: '{"state": "start"}'
  body_off: '{"state": "stop"}'
  is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  username: !secret dockermon_username
  password: !secret dockermon_password
  timeout: 20

- platform: rest
  resource: !secret dockermon_nodered
  name: Dockermon NodeRED
  body_on: '{"state": "start"}'
  body_off: '{"state": "stop"}'
  is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  username: !secret dockermon_username
  password: !secret dockermon_password
  timeout: 20
